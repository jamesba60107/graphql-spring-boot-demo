type Query {
    getAllBooks : [Book]
    getBookById(id : Int) : Book
    getBookListByIdGreaterThan(id : Int) : [Book]
    getBookListByIdLessThan(id : Int) : [Book]
    getBookListByPageCountGreaterThan(pageCount : Int) : [Book]
    getBookListByPageCountLessThan(pageCount : Int) : [Book]
}

type Mutation {
    createBook(name : String, pageCount : Int, authorId : Int) : Book
#    deleteBook(id : Int) : Book
}

type Subscription {
    updateBook(id: Int, name: String, pageCount: Int, authorId: Int): Book
}

type Book {
    id : ID
    name : String
    pageCount : Int
    author : Author
}

type Author {
    id : ID
    name : String
}